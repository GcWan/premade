#!/bin/bash
set -e

cd "${0%/*}"

CMD=$1

case $CMD in
    "" | help)
        echo "Usage: $0 <command>
        
Commands:
  help      Show this help message
  build     Build and run the Docker container
  ps        List the Docker containers
  logs      Show the logs of a Docker container
  restart   Restart the Docker container
  kill      Stop the Docker container
  env       Set API key in .env file
  backend   Run the development Django server in Python venv
  frontend  Run the development Next.js server locally
        "
        ;;
    build)
        docker compose up -d --build
        docker image prune -f
        docker volume prune -f
        ;;
    ps)
        docker compose ps
        ;;
    logs)
        if [[ ! -z $2 && ! $(docker compose ps | grep -F $2) ]]; then
            echo "Invalid container name. Please specify a valid container name. A list of containers can be found by running the ps command."
            exit 1
        fi
        docker compose logs -f $2
        ;;
    restart)
        if [[ ! -z $2 && ! $(docker compose ps | grep -F $2) ]]; then
            echo "Invalid container name. Please specify a valid container name. A list of containers can be found by running the ps command."
            exit 1
        fi
        docker compose restart $2
        ;;
    kill)
        docker compose down
        ;;
    env)
        cd "backend"
        echo "API_KEY = \"$2\"" > .env
        cat .env
        ;;
    backend)
        cd "backend"
        if [[ ! -f ".env" ]]; then
            echo "No .env file found. Please use the env command."
            exit 1
        fi
        if [[ ! -d "./venv" ]]; then
            if [[ ! $(pip list | grep -F virtualenv) ]]; then
                echo "Installing virtualenv..."
                pip3 install virtualenv
            fi
            virtualenv venv
        fi
        source venv/bin/activate
        pip install -r requirements.txt 
        python manage.py runserver
        ;;
    frontend)
        cd "frontend"
        if [[ ! -d "node_modules" ]]; then
            which -s yarn || npm install -g yarn
        fi
        yarn install --frozen-lockfile
        yarn dev
        ;;
    *)
        echo "Invalid command. Please use the help command to see a list of commands."
        exit 1
        ;;
esac
exit 0
